[{"content":"\r使用docx+regex从Word获取特定内容\r🤳开始之前 \r💃准备开始 读取word 这里我使用Python-docx模块来操作word。\n使用pip安装\r使用easy_install安装\r\r1  pip install python-docx\r  \r\r1  easy_install python-docx\r  \r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"ee90c5cbed9fecd5\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r 1 2 3 4 5 6 7 8 9 10 11 12  from docx import Document\rfrom docx.shared import Inches\rdocument = Document(\u0026#39;demo.docx\u0026#39;) #打开文件demo.docx\r for paragraph in document.paragraphs:\rprint(paragraph.text) #打印各段落内容文本\r document.add_paragraph(\r\u0026#39;Add new paragraph\u0026#39;, style=\u0026#39;ListNumber\u0026#39;\r) #添加新段落\r document.save(\u0026#39;demo.docx\u0026#39;) #保存文档\r   获取特定文本 拿到几份判决书看了下，需要的文本前后有明显的起始截止标识，直接正则表达式。\n\r\r正则表达式\r\r正则表达式(regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。\r\r \r输出特定文本 使用Python-docx模块的add_paragraph()方法将文本从list输出至word中。\n👨‍💻具体实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  #!/usr/bin/env python3\r # -*- coding: utf-8 -*-\r import re\rimport os\rimport importlib,sys # Python 3.4 之后弃用imp\r importlib.reload(sys) # 处理windows与其他os的路径中的\\/\r from pathlib import Path\rfrom docx import Document\rdata_files=[(\u0026#34;\u0026#34;,[\u0026#34;MSVCR100.dll\u0026#34;])]\rfile_path = Path(sys.path[0]) # 调试使用脚本路径\r #file_path = Path(os.getcwd()) # 打包使用程序路径\r document = Document()\rfrom docx.oxml.ns import qn\rdocument.styles[\u0026#39;Normal\u0026#39;].font.name = u\u0026#39;宋体\u0026#39;\rdocument.styles[\u0026#39;Normal\u0026#39;]._element.rPr.rFonts.set(qn(\u0026#39;w:eastAsia\u0026#39;), u\u0026#39;宋体\u0026#39;)\rdef searchFiles():\rword_dir = os.listdir(file_path / \u0026#34;word\u0026#34;)\r# 文件放置在当前目录下的word文件夹中\r i = 0\rfor s in word_dir:\rwordName = word_dir[i]\ri = i + 1\rstr1 = file_path / \u0026#34;word\u0026#34; / wordName\rdocxSearch(str1)\rdocument.save(file_path / \u0026#34;这个就是你需要的文档啦.docx\u0026#34;)\rdef docxSearch(wordName):\rtemplate = \u0026#39;\u0026#39;\rfile = Document(wordName)\rfor para in file.paragraphs:\rtemplate = template + para.text\r# print( para.text )\r slotList = RegularEx(template)\rfor slot in slotList:\rprint (slot)\rdocument.add_paragraph(slot,style=\u0026#39;List Number\u0026#39;)\rdef RegularEx(temp):\rrule = r\u0026#39;判决如下：(.*?)如不服本判决，\u0026#39;\rslotList = re.findall(rule, temp)\rreturn slotList\rif __name__ == \u0026#39;__main__\u0026#39;:\rsearchFiles()\r  ","description":"使用docx+regex从Word获取特定内容","id":0,"section":"posts","tags":["python","word"],"title":"获取Word特定内容","uri":"https://lynm3k.coding-pages.com/posts/tool-gettextfromword/"},{"content":"\r\rKnow yourself and be yourself!\r\r 纽约时间比加州时间早三个小时，\nNew York is 3 hours ahead of California,\n但加州时间并没有变慢。\nbut it does not make California slow.\n有人22岁就毕业了，\nSomeone graduated at the age of 22,\n但等了五年才找到好的工作！\nbut waited 5 years before securing a good job!\n有人25岁就当上CEO，\nSomeone became a CEO at 25,\n却在50岁去世。\nand died at 50.\n也有人迟到50岁才当上CEO，\nWhile another became a CEO at 50,\n然后活到90岁。\nand lived to 90 years.\n有人依然单身，\nSomeone is still single,\n同时也有人已婚。\nwhile someone else got married.\n欧巴马55岁就退休，\nObama retires at 55,\n川普70岁才开始当总统。\nbut Trump starts at 70.\n世上每个人本来就有自己的发展时区。\nAbsolutely everyone in this world works based on their Time Zone.\n身边有些人看似走在你前面，\nPeople around you might seem to go ahead of you,\n也有人看似走在你后面。\nsome might seem to be behind you.\n但其实每个人在自己的时区有自己的步程。\nBut everyone is running their own RACE, in their own TIME.\n不用嫉妒或嘲笑他们。\nDon’t envy them or mock them.\n他们都在自己的时区里，你也是！\nThey are in their TIME ZONE, and you are in yours!\n生命就是等待正确的行动时机。\nLife is about waiting for the right moment to act.\n所以，放轻松。\nSo, RELAX.\n你没有落后。\nYou’re not LATE.\n你没有领先。\nYou’re not EARLY.\n在命运为你安排的属于自己的时区里，一切都准时。\nYou are very much ON TIME, and in your TIME ZONE Destiny set up for you.\n \r Expectations 二十而立\n三十不惑\n四十知天命\n五十耳顺\n六十从心所欲\nBlog Timeline  2020.04.01：将博客迁移至Hugo+Zzo theme。 2018.05.10：使用Hexo+NEXT theme搭建个人博客。  ","description":"你曾经也是第一名啊。","id":1,"section":"","tags":null,"title":"About","uri":"https://lynm3k.coding-pages.com/about/"}]